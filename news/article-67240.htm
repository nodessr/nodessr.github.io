<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://nodessr.github.io/news/article-67240.htm" />
    <title>C#语法糖系列第一篇：聊聊 params 参数底层玩法</title>
        <meta name="description" content="首先说说为什么要写这个系列，大概有两点原因。  这种文章阅读量确实高... 对 IL 和 汇编代码 的学习巩固  所以就决定写一下这个系列，如果大家能从中有所收获，那就更好啦！ 一：params 应用" />
        <link rel="icon" href="/assets/website/img/nodessr/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Node SSR节点订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://nodessr.github.io/news/article-67240.htm" />
    <meta property="og:site_name" content="Node SSR节点订阅官网" />
    <meta property="og:title" content="C#语法糖系列第一篇：聊聊 params 参数底层玩法" />
    <meta property="og:image" content="https://nodessr.github.io/uploads/20240819-1/1a6c660fe67d2e94c7bc96efe3b05a3a.webp" />
        <meta property="og:release_date" content="2025-03-04T10:15:17" />
    <meta property="og:updated_time" content="2025-03-04T10:15:17" />
        <meta property="og:description" content="首先说说为什么要写这个系列，大概有两点原因。  这种文章阅读量确实高... 对 IL 和 汇编代码 的学习巩固  所以就决定写一下这个系列，如果大家能从中有所收获，那就更好啦！ 一：params 应用" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="C#语法糖系列第一篇：聊聊 params 参数底层玩法">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">
    <link rel="dns-prefetch" href="https://stackpath.bootstrapcdn.com">

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="/assets/website/css/nodessr/animate.css">
    <link rel="stylesheet" href="/assets/website/css/nodessr/owl.carousel.min.css">
    <link rel="stylesheet" href="/assets/website/css/nodessr/owl.theme.default.min.css">
    <link rel="stylesheet" href="/assets/website/css/nodessr/magnific-popup.css">
    <link rel="stylesheet" href="/assets/website/css/nodessr/flaticon.css">
    <link rel="stylesheet" href="/assets/website/css/nodessr/style.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-FMQ6KRWLLE"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-FMQ6KRWLLE');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <nav class="navbar navbar-expand-lg navbar-dark ftco_navbar bg-dark ftco-navbar-light" id="ftco-navbar">
        <div class="container">
            <a class="navbar-brand" href="/">
                        <span>Node SSR</span>
                        </a>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#ftco-nav" aria-controls="ftco-nav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="oi oi-menu"></span> Menu
            </button>
            <div class="collapse navbar-collapse" id="ftco-nav">
                <ul class="navbar-nav ml-auto">
                                        <li class="nav-item"><a href="/" class="nav-link">首页</a></li>
                                        <li class="nav-item"><a href="/free-nodes/" class="nav-link">免费节点</a></li>
                                        <li class="nav-item"><a href="/paid-subscribe/" class="nav-link">推荐机场</a></li>
                                        <li class="nav-item"><a href="/client.htm" class="nav-link">客户端</a></li>
                                        <li class="nav-item"><a href="/news/" class="nav-link">新闻资讯</a></li>
                                    </ul>
            </div>
        </div>
    </nav>
    <!-- END nav -->
    <section class="hero-wrap hero-wrap-2" style="background-image: url('/assets/website/img/nodessr/bg_5.jpg');" data-stellar-background-ratio="0.5">
        <div class="overlay"></div>
        <div class="container">
            <div class="row no-gutters slider-text align-items-end justify-content-center">
                <div class="col-md-9 ftco-animate mb-5 text-center">
                    <p class="breadcrumbs mb-0">
                        <span class="mr-2"><a href="/">首页 <i class="fa fa-chevron-right"></i></a></span>
                        <span class="mr-2"><a href="/news/">新闻资讯 <i class="fa fa-chevron-right"></i></a></span>
                        <span>正文</span>
                    </p>
                    <h1 class="mb-0 bread">C#语法糖系列第一篇：聊聊 params 参数底层玩法</h1>
                </div>
            </div>
        </div>
    </section>
    <section class="ftco-section ftco-no-pb ftco-no-pt py-5">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<p>首先说说为什么要写这个系列，大概有两点原因。</p> <ol> <li>这种文章阅读量确实高...</li> <li>对 IL 和 汇编代码 的学习巩固</li> </ol> <p>所以就决定写一下这个系列，如果大家能从中有所收获，那就更好啦！</p> <h2 id="一params-应用层玩法">一：params 应用层玩法</h2> <p>首先上一段<code>测试代码</code>。</p> <pre><code class="language-C#">     class Program     {         static void Main(string[] args)         {             Test(100, 200, 300);             Test();         }          static void Test(params int[] list)         {             Console.WriteLine($"list.length={list.Length}");         }     }</code></pre> <p>输出结果如下：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/b16229a0ff3f234a13ae850defcc9a9d.jpg" alt="C#语法糖系列第一篇：聊聊 params 参数底层玩法"></p> <p>可以看出如果给<code>方法形参</code> 加上<code>params</code> 前缀，在传递<code>方法实参</code> 上就特别灵活，点赞。</p> <p>接下来我们来看看，这么灵活的<code>实参传递</code> 底层到底是怎么玩的？我们先从 IL 层面探究下。</p> <h2 id="二il-层面解读">二：IL 层面解读</h2> <p>用<code>ILSpy</code> 打开我们的 exe ，看看 IL 代码</p> <pre><code class="language-C#"> .method private hidebysig static  	void Main ( 		string[] args 	) cil managed  { 	// Method begins at RVA 0x2050 	// Code size 37 (0x25) 	.maxstack 8 	.entrypoint  	IL_0000: nop 	IL_0001: ldc.i4.3 	IL_0002: newarr [mscorlib]System.Int32 	IL_0007: dup 	IL_0008: ldtoken field valuetype '&lt;PrivateImplementationDetails&gt;'/'__StaticArrayInitTypeSize=12' '&lt;PrivateImplementationDetails&gt;'::'9AC9CF706FBD14D039E0436219C5D852927E5F69295F2EF423AE897345197B2A' 	IL_000d: call void [mscorlib]System.Runtime.CompilerServices.RuntimeHelpers::InitializeArray(class [mscorlib]System.Array, valuetype [mscorlib]System.RuntimeFieldHandle) 	IL_0012: call void ConsoleApp2.Program::Test(int32[]) 	IL_0017: nop 	IL_0018: ldc.i4.0 	IL_0019: newarr [mscorlib]System.Int32 	IL_001e: call void ConsoleApp2.Program::Test(int32[]) 	IL_0023: nop 	IL_0024: ret } // end of method Program::Main  .method private hidebysig static  	void Test ( 		int32[] list 	) cil managed  { 	.param [1] 		.custom instance void [mscorlib]System.ParamArrayAttribute::.ctor() = ( 			01 00 00 00 		) 	// Method begins at RVA 0x2076 	// Code size 26 (0x1a) 	.maxstack 8  	IL_0000: nop 	IL_0001: ldstr "list.length={0}" 	IL_0006: ldarg.0 	IL_0007: ldlen 	IL_0008: conv.i4 	IL_0009: box [mscorlib]System.Int32 	IL_000e: call string [mscorlib]System.String::Format(string, object) 	IL_0013: call void [mscorlib]System.Console::WriteLine(string) 	IL_0018: nop 	IL_0019: ret } // end of method Program::Test</code></pre> <p>上面是<code>Main</code> 和<code>Test</code> 方法的IL代码，我们逐一看一下。</p> <h3 id="1-test-方法">1. Test 方法</h3> <p>从<code>int32[] list</code> 参数看并没有所谓的<code>params</code>，这也就说明它是<code>C#编译器</code> 玩的一个手段而已，在方法调用前就已经构建好了。</p> <h3 id="2-main方法">2. Main方法</h3> <p>可以看到 IL 层面的<code>Test(100, 200, 300)</code> 已经变成了下面五行代码。</p> <pre><code class="language-C#"> 	IL_0002: newarr [mscorlib]System.Int32 	IL_0007: dup 	IL_0008: ldtoken field valuetype '&lt;PrivateImplementationDetails&gt;'/'__StaticArrayInitTypeSize=12' '&lt;PrivateImplementationDetails&gt;'::'9AC9CF706FBD14D039E0436219C5D852927E5F69295F2EF423AE897345197B2A' 	IL_000d: call void [mscorlib]System.Runtime.CompilerServices.RuntimeHelpers::InitializeArray(class [mscorlib]System.Array, valuetype [mscorlib]System.RuntimeFieldHandle) 	IL_0012: call void ConsoleApp2.Program::Test(int32[])</code></pre> <p>逻辑大概就是:</p> <ul> <li>用<code>newarr</code> 构建初始化<code>int[]</code> 数组。</li> <li>用<code>ldtoken</code> 从程序元数据中提取<code>1,2,3</code>。</li> <li>用<code>InitializeArray</code> 来将 1，2，3 构建到数组中。</li> </ul> <p>有了这些指令，我相信 JIT 就知道怎么做了。</p> <p>再看<code>Test()</code> 的 IL 指令只有一行<code>newarr [mscorlib]System.Int32</code> 初始化。</p> <p>所以本质上来说，就是提前构建好 array，然后进行参数传递，仅此而已。。。</p> <h2 id="三汇编层面解读">三：汇编层面解读</h2> <p>有了<code>newarr + ldtoken + call</code> 三条指令，接下来我们读一下汇编层做了什么，使用 windbg 打开 exe，简化后的汇编代码如下：</p> <pre><code class="language-C#"> 0:000&gt; !U /d 009b0848 Normal JIT generated code ConsoleApp2.Program.Main(System.String[]) Begin 009b0848, size 77  D:\net5\ConsoleApp4\ConsoleApp2\Program.cs @ 14: &gt;&gt;&gt; 009b0848 55              push    ebp 009b0849 8bec            mov     ebp,esp 009b084b 83ec10          sub     esp,10h 009b084e 33c0            xor     eax,eax 009b0850 8945f4          mov     dword ptr [ebp-0Ch],eax 009b0853 8945f8          mov     dword ptr [ebp-8],eax 009b0856 8945f0          mov     dword ptr [ebp-10h],eax 009b0859 894dfc          mov     dword ptr [ebp-4],ecx 009b085c 833df042710000  cmp     dword ptr ds:[7142F0h],0 009b0863 7405            je      009b086a 009b0865 e816f55264      call    clr!JIT_DbgIsJustMyCode (64edfd80) 009b086a 90              nop  D:\net5\ConsoleApp4\ConsoleApp2\Program.cs @ 15: 009b086b b95e186763      mov     ecx,offset mscorlib_ni!System.Text.Encoding.GetEncodingCodePage(Int32)$##6006719 &lt;PERF&gt; (mscorlib_ni+0x185e) (6367185e) 009b0870 ba03000000      mov     edx,3 009b0875 e8b229d5ff      call    0070322c (JitHelp: CORINFO_HELP_NEWARR_1_VC) 009b087a 8945f4          mov     dword ptr [ebp-0Ch],eax 009b087d b9e04d7100      mov     ecx,714DE0h 009b0882 e819c91f64      call    clr!JIT_GetRuntimeFieldStub (64bad1a0) 009b0887 8945f8          mov     dword ptr [ebp-8],eax 009b088a 8d45f8          lea     eax,[ebp-8] 009b088d ff30            push    dword ptr [eax] 009b088f 8b4df4          mov     ecx,dword ptr [ebp-0Ch] 009b0892 e8f9c61f64      call    clr!ArrayNative::InitializeArray (64bacf90) 009b0897 8b4df4          mov     ecx,dword ptr [ebp-0Ch] 009b089a ff15904d7100    call    dword ptr ds:[714D90h] (ConsoleApp2.Program.Test(Int32[]), mdToken: 06000002) 009b08a0 90              nop  D:\net5\ConsoleApp4\ConsoleApp2\Program.cs @ 16: 009b08a1 b95e186763      mov     ecx,offset mscorlib_ni!System.Text.Encoding.GetEncodingCodePage(Int32)$##6006719 &lt;PERF&gt; (mscorlib_ni+0x185e) (6367185e) 009b08a6 33d2            xor     edx,edx 009b08a8 e87f29d5ff      call    0070322c (JitHelp: CORINFO_HELP_NEWARR_1_VC) 009b08ad 8945f0          mov     dword ptr [ebp-10h],eax 009b08b0 8b4df0          mov     ecx,dword ptr [ebp-10h] 009b08b3 ff15904d7100    call    dword ptr ds:[714D90h] (ConsoleApp2.Program.Test(Int32[]), mdToken: 06000002) 009b08b9 90              nop  D:\net5\ConsoleApp4\ConsoleApp2\Program.cs @ 17: 009b08ba 90              nop 009b08bb 8be5            mov     esp,ebp 009b08bd 5d              pop     ebp 009b08be c3              ret</code></pre> <h3 id="1-newarr">1. newarr</h3> <p>可以很清楚的看到，<code>newarr</code> 调用了 CLR 中的jithelper函数<code>CORINFO_HELP_NEWARR_1_VC</code> 下的<code>JIT_NewArr1</code> 方法，大家有兴趣可以看下<code>jitheapler.cpp</code>，调用完之后，初始化数组就出来了。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/8a49eacf5d9c4fcbe68ef881bb9ac2bf.jpg" alt="C#语法糖系列第一篇：聊聊 params 参数底层玩法"></p> <p>从dp看，数组只申明了<code>length=3</code>,还并没有数组元素，也就说所谓的初始化。</p> <h3 id="2-ldtoken--initializearray">2. ldtoken &amp; InitializeArray</h3> <p>刚才也说到了, ldtoken 是在运行时提取元数据，那就必须要解析 PE 头，在 clr 层面有一个<code>PEDecoder::GetRvaData</code> 方法就是用来解析运行时数据，它是发生在<code>ArrayNative::InitializeArray</code> 方法中，所以我们下两个 bu 命令拦截。</p> <pre><code class="language-C#"> 0:000&gt; bu clr!ArrayNative::InitializeArray 0:000&gt; bu clr!PEDecoder::GetRvaData 0:000&gt; g Breakpoint 3 hit eax=0019f500 ebx=0019f5ac ecx=024c2338 edx=006fb930 esi=00000000 edi=0019f520 eip=64bacf90 esp=0019f4f0 ebp=0019f508 iopl=0         nv up ei pl zr na pe nc cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000246 clr!ArrayNative::InitializeArray: 64bacf90 6a78            push    78h 0:000&gt; g Breakpoint 0 hit eax=00713448 ebx=00624044 ecx=0071344c edx=0071dc28 esi=00624044 edi=00624de0 eip=64befcfc esp=0019f400 ebp=0019f410 iopl=0         nv up ei pl zr na pe nc cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000246 clr!PEDecoder::GetRvaData: 64befcfc 55              push    ebp 0:000&gt; k   # ChildEBP RetAddr       00 0019f410 64b63be5     clr!PEDecoder::GetRvaData 01 0019f410 64b63bb3     clr!Module::GetRvaField+0x40 02 0019f44c 64bad0a7     clr!FieldDesc::GetStaticAddressHandle+0xdd 03 0019f4ec 00680897     clr!ArrayNative::InitializeArray+0x11a 0:000&gt; bp 64b63be5 0:000&gt; g eax=00402928 ebx=00624044 ecx=0071344c edx=0071dc28 esi=00624044 edi=00624de0 eip=64b63be5 esp=0019f40c ebp=0019f410 iopl=0         nv up ei pl nz na pe nc cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000206 clr!Module::GetRvaField+0x40: 64b63be5 5e              pop     esi</code></pre> <p>从输出看，上面的<code>GetRvaField</code> 方法的返回值会送到 eax 上，接下来我们验证下 eax 上的值是不是参数 100，200，300 。</p> <pre><code class="language-C#"> 0:000&gt; dp eax L3 00402928  00000064 000000c8 0000012c</code></pre> <p>上面三个就是 16进制的表示，接下来我们再验证下这三个值是怎么赋到初始化数组中的，可以用<code>ba</code> 命令对 内存地址 进行拦截。</p> <pre><code class="language-C#"> 0:000&gt; ba r4 023e2338 + 0x8 0:000&gt; ba r4 023e2338 + 0x8 + 0x4 0:000&gt; ba r4 023e2338 + 0x8 + 0x4 + 0x4 0:000&gt; g Breakpoint 3 hit eax=0000000c ebx=00000000 ecx=00000003 edx=00000064 esi=00402928 edi=023e2340 eip=6a91d68b esp=0019f440 ebp=0019f4ec iopl=0         nv up ei pl nz na pe nc cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000206 VCRUNTIME140_CLR0400!memcpy+0x50b: 6a91d68b 83c704          add     edi,4 0:000&gt; g Breakpoint 4 hit eax=0000000c ebx=00000000 ecx=00000002 edx=000000c8 esi=0040292c edi=023e2344 eip=6a91d68b esp=0019f440 ebp=0019f4ec iopl=0         nv up ei pl nz na po nc cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000202 VCRUNTIME140_CLR0400!memcpy+0x50b: 6a91d68b 83c704          add     edi,4 0:000&gt; g Breakpoint 5 hit eax=0000000c ebx=00000000 ecx=00000001 edx=0000012c esi=00402930 edi=023e2348 eip=6a91d68b esp=0019f440 ebp=0019f4ec iopl=0         nv up ei pl nz na po nc cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00000202 VCRUNTIME140_CLR0400!memcpy+0x50b: 6a91d68b 83c704          add     edi,4  0:000&gt; dp 023e2338 L5 023e2338  6368426c 00000003 00000064 000000c8 023e2348  0000012c</code></pre> <p>接下来稍微解释下<code>ba r4 023e2338 + 0x8</code> 命令。</p> <ul> <li> <p>023e2338 是初始化数组的首地址。</p> </li> <li> <p>023e2338+0x8 初始化数组第一个元素的地址。</p> </li> <li> <p>023e2338 + 0x8 + 0x4  初始化数组第二个元素的地址。</p> </li> <li> <p>r4  按4byte对地址块读写进行监控。</p> </li> </ul> <p>当三个断点命中后，可以看到初始化数组<code>023e2338</code> 上的三个元素值都已经填上了，就说这么多吧，相信大家对 params 机制有一定的理解。</p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-66620.htm">被猫抓了一下红色划痕没出血有点疼有点包（被猫抓了一下红色划痕不痛）</a></p>
                                        <p>下一个：<a href="/news/article-67241.htm">关于IPC和PTH用户权限问题,psexec拒绝访问(Access Denied)的原因_在线工具</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-36105.htm" title="动物医院名字大全集最新图片（动物医院名字大全集最新图片及名字）">动物医院名字大全集最新图片（动物医院名字大全集最新图片及名字）</a></li>
                        <li class="py-2"><a href="/news/article-52208.htm" title="Redis 如何保证数据库和缓存双写一致性？">Redis 如何保证数据库和缓存双写一致性？</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-6-free-ssr-subscribe.htm" title="「1月6日」最高速度19.9M/S，2025年V2ray/Clash/SSR/Shadowrocket每天更新免费机场订阅节点链接">「1月6日」最高速度19.9M/S，2025年V2ray/Clash/SSR/Shadowrocket每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-51157.htm" title="狗粮加盟一般多少钱一个月（狗粮加盟厂）">狗粮加盟一般多少钱一个月（狗粮加盟厂）</a></li>
                        <li class="py-2"><a href="/news/article-54354.htm" title="ZooKeeper之Java客户端API使用—读取数据。">ZooKeeper之Java客户端API使用—读取数据。</a></li>
                        <li class="py-2"><a href="/news/article-50098.htm" title="2020年中国动物疫苗市场情况怎么样（中国动物疫苗公司排名）">2020年中国动物疫苗市场情况怎么样（中国动物疫苗公司排名）</a></li>
                        <li class="py-2"><a href="/news/article-67240.htm" title="C#语法糖系列第一篇：聊聊 params 参数底层玩法">C#语法糖系列第一篇：聊聊 params 参数底层玩法</a></li>
                        <li class="py-2"><a href="/news/article-45614.htm" title="动物疫苗在哪买比较好呢（动物疫苗在哪里买）">动物疫苗在哪买比较好呢（动物疫苗在哪里买）</a></li>
                        <li class="py-2"><a href="/news/article-38186.htm" title="宠物医院好评的段子 宠物医院好评的段子文案">宠物医院好评的段子 宠物医院好评的段子文案</a></li>
                        <li class="py-2"><a href="/news/article-50611.htm" title="从没出过门的猫走丢了能自己回家吗（从没出过门的猫走丢了能自己回家吗视频）">从没出过门的猫走丢了能自己回家吗（从没出过门的猫走丢了能自己回家吗视频）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">18</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">84</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">82</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
        <footer class="ftco-footer">
        <div class="container-fluid px-0 py-5 bg-black">
            <div class="container">
                <div class="row">
                    <div class="col-md-12">
                        <p class="mb-0" style="color: rgba(255,255,255,.5);">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                        Node SSR节点订阅官网 版权所有
                        <br />
                        Powered by WordPress
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </footer>
    <!-- loader -->
    <div id="ftco-loader" class="show fullscreen"><svg class="circular" width="48px" height="48px">
            <circle class="path-bg" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke="#eeeeee" />
            <circle class="path" cx="24" cy="24" r="22" fill="none" stroke-width="4" stroke-miterlimit="10" stroke="#F96D00" /></svg>
    </div>
    <script src="/assets/website/js/frontend/nodessr/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/nodessr/jquery-migrate-3.0.1.min.js"></script>
    <script src="/assets/website/js/frontend/nodessr/popper.min.js"></script>
    <script src="/assets/website/js/frontend/nodessr/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/nodessr/jquery.easing.1.3.js"></script>
    <script src="/assets/website/js/frontend/nodessr/jquery.waypoints.min.js"></script>
    <script src="/assets/website/js/frontend/nodessr/jquery.stellar.min.js"></script>
    <script src="/assets/website/js/frontend/nodessr/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/nodessr/jquery.magnific-popup.min.js"></script>
    <script src="/assets/website/js/frontend/nodessr/jquery.animateNumber.min.js"></script>
    <script src="/assets/website/js/frontend/nodessr/scrollax.min.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBVWaKrjvy3MaE7SQ74_uJiULgl1JY0H2s&sensor=false"></script>
    <script src="/assets/website/js/frontend/nodessr/google-map.js"></script>
    <script src="/assets/website/js/frontend/nodessr/main.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>